// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonDeckWinRateAPI.Models.Context;

namespace PokemonDeckWinRateAPI.Migrations
{
    [DbContext(typeof(PokemonDeckWinRateContext))]
    [Migration("20210805190729_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PokemonDeckWinRateAPI.Models.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstPokemonExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPokemonExternalId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("PokemonDeckWinRateAPI.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("FirstTurn")
                        .HasColumnType("bit");

                    b.Property<int>("OpponentDeckId")
                        .HasColumnType("int");

                    b.Property<int>("UsedDeckId")
                        .HasColumnType("int");

                    b.Property<bool>("Win")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OpponentDeckId");

                    b.HasIndex("UsedDeckId");

                    b.ToTable("Matchs");
                });

            modelBuilder.Entity("PokemonDeckWinRateAPI.Models.Match", b =>
                {
                    b.HasOne("PokemonDeckWinRateAPI.Models.Deck", "OpponentDeck")
                        .WithMany("MatchsAgainst")
                        .HasForeignKey("OpponentDeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonDeckWinRateAPI.Models.Deck", "UsedDeck")
                        .WithMany("MatchsPlayed")
                        .HasForeignKey("UsedDeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpponentDeck");

                    b.Navigation("UsedDeck");
                });

            modelBuilder.Entity("PokemonDeckWinRateAPI.Models.Deck", b =>
                {
                    b.Navigation("MatchsAgainst");

                    b.Navigation("MatchsPlayed");
                });
#pragma warning restore 612, 618
        }
    }
}
